version: '3.8'

services:

    nginx:
        image: nginx:latest
        container_name: nginx
        volumes:
            - ./nginx/laravel.conf:/etc/nginx/conf.d/laravel.conf
            - ./nginx/ssl:/etc/nginx/ssl
            - ./laravel:/var/www/html
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - app
            - mongo
        networks:
            - app-network

    app:
        build:
            context: ./
            dockerfile: ./Dockerfile
        container_name: laravel_api
        volumes:
            - ./:/var/www/html
        expose:
            - "9000"
        networks:
            - app-network
    horizon:
        build:
            context: ./
            dockerfile: ./Dockerfile-horizon
        container_name: laravel_horizon
        volumes:
            - ./:/var/www/html
        depends_on:
            - redis
        command: php artisan horizon
        networks:
            - app-network

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@example.com
            PGADMIN_DEFAULT_PASSWORD: admin
        ports:
            - "5050:80"
        depends_on:
            - postgres
        networks:
            - app-network

    postgres:
        image: postgres:15
        container_name: postgres
        environment:
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network

    mongo:
        image: mongo
        container_name: mongo
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        networks:
            - app-network
        volumes:
            - mongo_data:/data/db

    mongo-express:
        image: mongo-express
        container_name: mongo-express
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example
            ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
            ME_CONFIG_BASICAUTH: true
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: redis
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    postgres_data:
    mongo_data:
    redis_data:
